/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class signswig_signJNI */

#ifndef _Included_signswig_signJNI
#define _Included_signswig_signJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     signswig_signJNI
 * Method:    MAX_RADIUS_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_MAX_1RADIUS_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    MAX_L2W_RATIO_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_MAX_1L2W_1RATIO_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_changeCoordinates
 * Signature: (JLsignswig/Obs;JIII)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_Obs_1changeCoordinates
  (JNIEnv *, jclass, jlong, jobject, jlong, jint, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_reduceParameters__SWIG_0
 * Signature: (JLsignswig/Obs;JJ)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1reduceParameters_1_1SWIG_10
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_reduceParameters__SWIG_1
 * Signature: (JLsignswig/Obs;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1reduceParameters_1_1SWIG_11
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_selectParameters
 * Signature: (JLsignswig/Obs;JI)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1selectParameters
  (JNIEnv *, jclass, jlong, jobject, jlong, jint);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_selectParametersSwig
 * Signature: (JLsignswig/Obs;I)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1selectParametersSwig
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_normalizeParameters__SWIG_0
 * Signature: (JLsignswig/Obs;JJ)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1normalizeParameters_1_1SWIG_10
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_normalizeParameters__SWIG_1
 * Signature: (JLsignswig/Obs;J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1normalizeParameters_1_1SWIG_11
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_save
 * Signature: (JLsignswig/Obs;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_Obs_1save
  (JNIEnv *, jclass, jlong, jobject, jstring, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_transpose
 * Signature: (JLsignswig/Obs;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1transpose
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_addObs
 * Signature: (JLsignswig/Obs;JLsignswig/Obs;II)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_Obs_1addObs
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_getObsSize
 * Signature: (JLsignswig/Obs;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_Obs_1getObsSize
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_getVecSize
 * Signature: (JLsignswig/Obs;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_Obs_1getVecSize
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_dump
 * Signature: (JLsignswig/Obs;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_Obs_1dump
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_isInit
 * Signature: (JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_Obs_1isInit
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    new_Obs__SWIG_0
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1Obs_1_1SWIG_10
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_Obs__SWIG_1
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1Obs_1_1SWIG_11
  (JNIEnv *, jclass, jstring);

/*
 * Class:     signswig_signJNI
 * Method:    new_Obs__SWIG_2
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1Obs_1_1SWIG_12
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_Obs__SWIG_3
 * Signature: (Ljava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1Obs_1_1SWIG_13
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    delete_Obs
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_delete_1Obs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    Obs_getme
 * Signature: (JLsignswig/Obs;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_Obs_1getme
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    N_POINTS_MIN_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_N_1POINTS_1MIN_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    signature_parameterize4PDA
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1parameterize4PDA
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_rotation
 * Signature: (JLsignswig/signature;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_signature_1rotation
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    new_signature__SWIG_0
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1signature_1_1SWIG_10
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_signature__SWIG_1
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1signature_1_1SWIG_11
  (JNIEnv *, jclass, jstring);

/*
 * Class:     signswig_signJNI
 * Method:    new_signature__SWIG_2
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1signature_1_1SWIG_12
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_signature__SWIG_3
 * Signature: (Ljava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1signature_1_1SWIG_13
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    signature_setIndex
 * Signature: (JLsignswig/signature;IIIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1setIndex
  (JNIEnv *, jclass, jlong, jobject, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    signature_centralizeCoordinates
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1centralizeCoordinates
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_zeroBaseNorm
 * Signature: (JLsignswig/signature;JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1zeroBaseNorm
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    signature_interpolateCoordinates
 * Signature: (JLsignswig/signature;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_signature_1interpolateCoordinates
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_normalizeSize
 * Signature: (JLsignswig/signature;D)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_signature_1normalizeSize
  (JNIEnv *, jclass, jlong, jobject, jdouble);

/*
 * Class:     signswig_signJNI
 * Method:    signature_normalizeDirection
 * Signature: (JLsignswig/signature;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_signature_1normalizeDirection
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_trim
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1trim
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_filter
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1filter
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_parameterize
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1parameterize
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    signature_parameterizeXY
 * Signature: (JLsignswig/signature;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_signature_1parameterizeXY
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    delete_signature
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_delete_1signature
  (JNIEnv *, jclass, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    LOG_ZERO_get
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_LOG_1ZERO_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    PRO_MIN_VAL_get
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_PRO_1MIN_1VAL_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    COV_DIAG_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_COV_1DIAG_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    COV_FULL_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_COV_1FULL_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    PARAMETER_STANDARD_VARIATION_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_PARAMETER_1STANDARD_1VARIATION_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_0
 * Signature: (Ljava/lang/String;Z)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_10
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_save
 * Signature: (JLsignswig/GMM;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1save
  (JNIEnv *, jclass, jlong, jobject, jstring, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_getVectorSize
 * Signature: (JLsignswig/GMM;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_GMM_1getVectorSize
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_getTrainingLogLikelihood
 * Signature: (JLsignswig/GMM;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_GMM_1getTrainingLogLikelihood
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_computeGama
 * Signature: (JLsignswig/GMM;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_GMM_1computeGama
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_getGaussianNumber
 * Signature: (JLsignswig/GMM;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_GMM_1getGaussianNumber
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_setGaussianNumber
 * Signature: (JLsignswig/GMM;I)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_GMM_1setGaussianNumber
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_assignObs
 * Signature: (JLsignswig/GMM;JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1assignObs
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_normalizeObsParameters
 * Signature: (JLsignswig/GMM;JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1normalizeObsParameters
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_test
 * Signature: (JLsignswig/GMM;JLsignswig/Obs;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_GMM_1test
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_restimateModel
 * Signature: (JLsignswig/GMM;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_GMM_1restimateModel
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_train
 * Signature: (JLsignswig/GMM;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1train
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_initProObs
 * Signature: (JLsignswig/GMM;JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1initProObs
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_isInit
 * Signature: (JLsignswig/GMM;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1isInit
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_dump
 * Signature: (JLsignswig/GMM;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_GMM_1dump
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_1
 * Signature: (IIIZZDDI)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_11
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jboolean, jdouble, jdouble, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_2
 * Signature: (IIIZZDD)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_12
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jboolean, jdouble, jdouble);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_3
 * Signature: (IIIZZD)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_13
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jboolean, jdouble);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_4
 * Signature: (IIIZZ)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_14
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_5
 * Signature: (IIIZ)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_15
  (JNIEnv *, jclass, jint, jint, jint, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_6
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_16
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_GMM__SWIG_7
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1GMM_1_1SWIG_17
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    delete_GMM
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_delete_1GMM
  (JNIEnv *, jclass, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    GMM_initGMM
 * Signature: (JLsignswig/GMM;JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_GMM_1initGMM
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    MAX_ITER_HMM_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_MAX_1ITER_1HMM_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    END_ACCURACY_get
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_END_1ACCURACY_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    END_ITERATION_NUMBER_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_END_1ITERATION_1NUMBER_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    TRANS_LR_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_TRANS_1LR_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    TRANS_BAKIS_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_TRANS_1BAKIS_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    TRANS_ERGODIC_get
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_TRANS_1ERGODIC_1get
  (JNIEnv *, jclass);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_tbStSequence_set
 * Signature: (JLsignswig/HMM;J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1tbStSequence_1set
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_tbStSequence_get
 * Signature: (JLsignswig/HMM;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_HMM_1tbStSequence_1get
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_tbStSequenceLen_set
 * Signature: (JLsignswig/HMM;J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1tbStSequenceLen_1set
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_tbStSequenceLen_get
 * Signature: (JLsignswig/HMM;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_HMM_1tbStSequenceLen_1get
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_setInitializationProperty
 * Signature: (JLsignswig/HMM;Z)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1setInitializationProperty
  (JNIEnv *, jclass, jlong, jobject, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_computeViterbiHamDistance
 * Signature: (JLsignswig/HMM;JIJI)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1computeViterbiHamDistance
  (JNIEnv *, jclass, jlong, jobject, jlong, jint, jlong, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_normalizeObsParameters
 * Signature: (JLsignswig/HMM;JLsignswig/Obs;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1normalizeObsParameters
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_setNStates
 * Signature: (JLsignswig/HMM;I)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1setNStates
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_setNGaussians
 * Signature: (JLsignswig/HMM;I)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1setNGaussians
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getLLba
 * Signature: (JLsignswig/HMM;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1getLLba
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_assignObs
 * Signature: (JLsignswig/HMM;I)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1assignObs
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getStateNumber
 * Signature: (JLsignswig/HMM;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_HMM_1getStateNumber
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getObsNumber
 * Signature: (JLsignswig/HMM;)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_HMM_1getObsNumber
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_isInit
 * Signature: (JLsignswig/HMM;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1isInit
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_0
 * Signature: (Ljava/lang/String;Z)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_10
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_1
 * Signature: (IIIIZZDDI)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_11
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean, jboolean, jdouble, jdouble, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_2
 * Signature: (IIIIZZDD)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_12
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean, jboolean, jdouble, jdouble);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_3
 * Signature: (IIIIZZD)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_13
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean, jboolean, jdouble);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_4
 * Signature: (IIIIZZ)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_14
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_5
 * Signature: (IIIIZ)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_15
  (JNIEnv *, jclass, jint, jint, jint, jint, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_6
 * Signature: (IIII)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_16
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_7
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_17
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    new_HMM__SWIG_8
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_new_1HMM_1_1SWIG_18
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_initHMM
 * Signature: (JLsignswig/HMM;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1initHMM
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_viterbi
 * Signature: (JLsignswig/HMM;JLsignswig/Obs;JZ)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1viterbi
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject, jlong, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_forward
 * Signature: (JLsignswig/HMM;JLsignswig/Obs;)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1forward
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_baumwelch
 * Signature: (JLsignswig/HMM;J)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1baumwelch
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_train
 * Signature: (JLsignswig/HMM;)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1train
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_save
 * Signature: (JLsignswig/HMM;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_signswig_signJNI_HMM_1save
  (JNIEnv *, jclass, jlong, jobject, jstring, jboolean);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_dump
 * Signature: (JLsignswig/HMM;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1dump
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    delete_HMM
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_delete_1HMM
  (JNIEnv *, jclass, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getSeqLenK
 * Signature: (JLsignswig/HMM;I)I
 */
JNIEXPORT jint JNICALL Java_signswig_signJNI_HMM_1getSeqLenK
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getSeqK
 * Signature: (JLsignswig/HMM;I)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_HMM_1getSeqK
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_initKObs
 * Signature: (JLsignswig/HMM;IJLsignswig/Obs;)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1initKObs
  (JNIEnv *, jclass, jlong, jobject, jint, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getInitObs
 * Signature: (JLsignswig/HMM;I)V
 */
JNIEXPORT void JNICALL Java_signswig_signJNI_HMM_1getInitObs
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_scomputeViterbiHamDistance
 * Signature: (JLsignswig/HMM;JIJI)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1scomputeViterbiHamDistance
  (JNIEnv *, jclass, jlong, jobject, jlong, jint, jlong, jint);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_getInitInt
 * Signature: (JLsignswig/HMM;)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_HMM_1getInitInt
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_entropy
 * Signature: (JLsignswig/HMM;JLsignswig/Obs;J)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1entropy
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    HMM_entropySwig
 * Signature: (JLsignswig/HMM;JLsignswig/Obs;J)D
 */
JNIEXPORT jdouble JNICALL Java_signswig_signJNI_HMM_1entropySwig
  (JNIEnv *, jclass, jlong, jobject, jlong, jobject, jlong);

/*
 * Class:     signswig_signJNI
 * Method:    SWIGsignatureUpcast
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_signswig_signJNI_SWIGsignatureUpcast
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
