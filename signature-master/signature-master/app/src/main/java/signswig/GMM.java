package signswig;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class GMM {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GMM(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GMM obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      signJNI.delete_GMM(swigCPtr);
    }
    swigCPtr = 0;
  }

  public GMM(String modelFile, boolean binary) {
    this(signJNI.new_GMM__SWIG_0(modelFile, binary), true);
  }

  public boolean save(String modelFile, boolean binary) {
    return signJNI.GMM_save(swigCPtr, this, modelFile, binary);
  }

  public int getVectorSize() {
    return signJNI.GMM_getVectorSize(swigCPtr, this);
  }

  public double getTrainingLogLikelihood() {
    return signJNI.GMM_getTrainingLogLikelihood(swigCPtr, this);
  }

  public void computeGama() {
    signJNI.GMM_computeGama(swigCPtr, this);
  }

  public int getGaussianNumber() {
    return signJNI.GMM_getGaussianNumber(swigCPtr, this);
  }

  public void setGaussianNumber(int M_) {
    signJNI.GMM_setGaussianNumber(swigCPtr, this, M_);
  }

  public boolean assignObs(Obs ob) {
    return signJNI.GMM_assignObs(swigCPtr, this, Obs.getCPtr(ob), ob);
  }

  public boolean normalizeObsParameters(Obs ob) {
    return signJNI.GMM_normalizeObsParameters(swigCPtr, this, Obs.getCPtr(ob), ob);
  }

  public double test(Obs ob) {
    return signJNI.GMM_test(swigCPtr, this, Obs.getCPtr(ob), ob);
  }

  public double restimateModel() {
    return signJNI.GMM_restimateModel(swigCPtr, this);
  }

  public boolean train() {
    return signJNI.GMM_train(swigCPtr, this);
  }

  public boolean initProObs(Obs ob) {
    return signJNI.GMM_initProObs(swigCPtr, this, Obs.getCPtr(ob), ob);
  }

  public boolean isInit() {
    return signJNI.GMM_isInit(swigCPtr, this);
  }

  public void dump() {
    signJNI.GMM_dump(swigCPtr, this);
  }

  public GMM(int M_, int L_, int covMatrixType_, boolean bRandomInit_, boolean bParameterNormalization_, double parameterStandardDeviation_, double endAccuracy_, int endIterationNumber_) {
    this(signJNI.new_GMM__SWIG_1(M_, L_, covMatrixType_, bRandomInit_, bParameterNormalization_, parameterStandardDeviation_, endAccuracy_, endIterationNumber_), true);
  }

  public GMM(int M_, int L_, int covMatrixType_, boolean bRandomInit_, boolean bParameterNormalization_, double parameterStandardDeviation_, double endAccuracy_) {
    this(signJNI.new_GMM__SWIG_2(M_, L_, covMatrixType_, bRandomInit_, bParameterNormalization_, parameterStandardDeviation_, endAccuracy_), true);
  }

  public GMM(int M_, int L_, int covMatrixType_, boolean bRandomInit_, boolean bParameterNormalization_, double parameterStandardDeviation_) {
    this(signJNI.new_GMM__SWIG_3(M_, L_, covMatrixType_, bRandomInit_, bParameterNormalization_, parameterStandardDeviation_), true);
  }

  public GMM(int M_, int L_, int covMatrixType_, boolean bRandomInit_, boolean bParameterNormalization_) {
    this(signJNI.new_GMM__SWIG_4(M_, L_, covMatrixType_, bRandomInit_, bParameterNormalization_), true);
  }

  public GMM(int M_, int L_, int covMatrixType_, boolean bRandomInit_) {
    this(signJNI.new_GMM__SWIG_5(M_, L_, covMatrixType_, bRandomInit_), true);
  }

  public GMM(int M_, int L_, int covMatrixType_) {
    this(signJNI.new_GMM__SWIG_6(M_, L_, covMatrixType_), true);
  }

  public GMM(int M_, int L_) {
    this(signJNI.new_GMM__SWIG_7(M_, L_), true);
  }

  public boolean initGMM(Obs obs_gmm) {
    return signJNI.GMM_initGMM(swigCPtr, this, Obs.getCPtr(obs_gmm), obs_gmm);
  }

}
