package signswig;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class signature extends Obs {
  private long swigCPtr;

  protected signature(long cPtr, boolean cMemoryOwn) {
    super(signJNI.SWIGsignatureUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(signature obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      signJNI.delete_signature(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public boolean parameterize4PDA() {
    return signJNI.signature_parameterize4PDA(swigCPtr, this);
  }

  public double rotation() {
    return signJNI.signature_rotation(swigCPtr, this);
  }

  public signature(int L_, int T_) {
    this(signJNI.new_signature__SWIG_0(L_, T_), true);
  }

  public signature(String filename) {
    this(signJNI.new_signature__SWIG_1(filename), true);
  }

  public signature(String filename, int L_) {
    this(signJNI.new_signature__SWIG_2(filename, L_), true);
  }

  public signature(String filename, int L_, int T_) {
    this(signJNI.new_signature__SWIG_3(filename, L_, T_), true);
  }

  public boolean setIndex(int xIndex_, int yIndex_, int pressureIndex_, int thetaXIndex_, int thetaYIndex_, int azimuthIndex_, int altitudeIndex_) {
    return signJNI.signature_setIndex(swigCPtr, this, xIndex_, yIndex_, pressureIndex_, thetaXIndex_, thetaYIndex_, azimuthIndex_, altitudeIndex_);
  }

  public boolean centralizeCoordinates() {
    return signJNI.signature_centralizeCoordinates(swigCPtr, this);
  }

  public boolean zeroBaseNorm(SWIGTYPE_p_int newMaxX, SWIGTYPE_p_int NewMaxY) {
    return signJNI.signature_zeroBaseNorm(swigCPtr, this, SWIGTYPE_p_int.getCPtr(newMaxX), SWIGTYPE_p_int.getCPtr(NewMaxY));
  }

  public void interpolateCoordinates() {
    signJNI.signature_interpolateCoordinates(swigCPtr, this);
  }

  public double normalizeSize(double sigma) {
    return signJNI.signature_normalizeSize(swigCPtr, this, sigma);
  }

  public double normalizeDirection() {
    return signJNI.signature_normalizeDirection(swigCPtr, this);
  }

  public boolean trim() {
    return signJNI.signature_trim(swigCPtr, this);
  }

  public boolean filter() {
    return signJNI.signature_filter(swigCPtr, this);
  }

  public boolean parameterize() {
    return signJNI.signature_parameterize(swigCPtr, this);
  }

  public boolean parameterizeXY() {
    return signJNI.signature_parameterizeXY(swigCPtr, this);
  }

}
